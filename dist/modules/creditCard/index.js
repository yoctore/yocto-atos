/* yocto-atos - Yocto module to make payment with Atos - Wrapper for Sips Office Json Interface - V0.1.0 */
"use strict";function CreditCard(a,b){this.config=b||{},this.logger=a}var _=require("lodash"),logger=require("yocto-logger"),joi=require("joi"),Q=require("q"),api=require("../api")(logger);CreditCard.prototype.createAuthorization=function(a){var b=Q.defer(),c=joi.object().required().keys({amount:joi.number().integer().required().min(0),captureDay:joi.number().integer().optional().min(0)["default"](7),captureMode:joi.string().optional()["default"]("VALIDATION"),cardNumber:joi.number().integer().required(),cardExpiryDate:joi.date().format("YYYYMM").required(),s10TransactionReference:joi.object().keys({s10TransactionId:joi.string().required().empty(),s10TransactionIdDate:joi.date().format("YYYYMMDD").required()})}),d=c.validate(a);return d.error?(this.logger.error("[ YoctoAtos.CreditCard.createAuthorization.joi ] - an error occured schema is not conform, more details : "+d.error.toString()),b.reject(d.error.toString()),b.promise):(a=d.value,this.logger.debug("[ YoctoAtos.CreditCard.createAuthorization ] - a new request will be send to create authorization payment"),api.process(this.config,"checkout/cardOrder",a,"createAuthorization",!0).then(function(a){b.resolve(a)})["catch"](function(a){this.logger.error("[ YoctoAtos.CreditCard.createAuthorization.create ] - the payment was not authorized"),b.reject(a)}.bind(this)),b.promise)},module.exports=function(a,b){return(_.isUndefined(a)||_.isNull(a))&&(logger.warning("[ CreditCard.constructor ] - Invalid logger given. Use internal logger"),a=logger),new CreditCard(a,b)};